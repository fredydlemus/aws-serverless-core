AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: compare-yourself-app

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: !Sub ${AWS::StackName}
          version: 1.0.0
        paths:
          /compare-yourself:
            post:
              requestBody:
                required: true
                validateBody: true
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - age
                        - height
                        - income
                      properties:
                        age:
                          type: integer
                        height:
                          type: integer
                        income:
                          type: integer
                        
                        
              x-amazon-apigateway-integration:
                type: "AWS" 
                httpMethod: "POST"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${cyStoreDataFunction.Arn}/invocations"
                passthroughBehavior: "WHEN_NO_TEMPLATES"
                integrationHttpMethod: "POST"
                requestTemplates:
                  # $input => request data (params, body)
                  # $ => request body
                  application/json: |
                    #set($inputRoot = $input.path('$'))
                    {
                      "age": $inputRoot.age
                    }                   
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                      method.response.header.Access-Control-Allow-Headers: 
                        "'Content-Type,Authorization,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                      method.response.header.Access-Control-Allow-Methods: "'*'"
                    responseTemplates:
                      application/json: |
                        {
                          "your-age": $input.json('$')
                        }
              responses:
                '200':
                  description: "Successful operation"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: string
                    Access-Control-Allow-Headers:
                      schema:
                        type: string
                    Access-Control-Allow-Methods:
                      schema:
                        type: string
                  content:
                    application/json:
                      schema:
                        type: object
            options:
              summary: "CORS support"
              responses:
                '200':
                  description: "Default response for CORS method"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: string
                    Access-Control-Allow-Headers:
                      schema:
                        type: string
                    Access-Control-Allow-Methods:
                      schema:
                        type: string
              x-amazon-apigateway-integration:
                type: "mock"
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                      method.response.header.Access-Control-Allow-Headers: 
                        "'Content-Type,Authorization,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
                      method.response.header.Access-Control-Allow-Methods: "'*'"
            delete:
              responses:
                '200':
                  description: "Successful operation"
                  content:
                    application/json:
                      schema:
                        type: object
              x-amazon-apigateway-integration:
                type: "AWS"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${cyDeleteDataFunction.Arn}/invocations"
                httpMethod: "POST"
                passthroughBehavior: "WHEN_NO_MATCH"
                responses:
                  default:
                    statusCode: 200


  cyStoreDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/handlers
      Handler: cy-store-data.cyStoreDataHandler
      Runtime: nodejs20.x
      FunctionName: cyStoreDataFunction
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 30
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /compare-yourself
            Method: post
            RestApiId: !Ref ApiGatewayApi

  cyDeleteDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/handlers
      FunctionName: cyDeleteDataFunction
      Handler: cy-delete-data.cyDeleteDataHandler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 30
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /compare-yourself
            Method: delete
            RestApiId: !Ref ApiGatewayApi



